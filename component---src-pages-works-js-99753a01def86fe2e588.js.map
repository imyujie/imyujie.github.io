{"version":3,"sources":["webpack:///./src/pages/works.js","webpack:///./src/pages/index.js","webpack:///./src/components/post-card.js"],"names":["query","WorksPage","as1","data","allMdx","edges","map","node","key","id","title","frontmatter","url","fields","slug","desc","image","featuredImage","type","PostList","styled","ul","theme","breakpointWidthSmall","breakpointWidthLarge","IndexPage","CardContainer","li","bgColor","cardBgColor","Image","Img","Title","h2","Description","p","LinkContaienr","Link","PostType","div","textColor","TYPES","article","work","Card","colors","darkVibrant","to","sizes","childImageSharp","vibrant"],"mappings":"+FAAA,sHA2BaA,EAAK,aAgCHC,UAnDG,SAAC,GAAc,IACzBC,EADwB,EAAXC,KACFC,OAAOC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,kBAAC,IAAD,CACEC,IAAKD,EAAKE,GACVC,MAAOH,EAAKI,YAAYD,MACxBE,IAAKL,EAAKM,OAAOC,KACjBC,KAAK,+DACLC,MAAOT,EAAKI,YAAYM,cACxBC,KAAMX,EAAKM,OAAOK,UAGtB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKR,MAAM,aACX,kBAAC,WAAD,KAAWR,M,kCCtBjB,+JAQaiB,EAAWC,IAAOC,GAAV,sEAAGD,CAAH,8EAGjB,qBAAGE,MAAkBC,wBAGrB,qBAAGD,MAAkBE,wBAwBZxB,EAAK,aAgCHyB,UAnDG,SAAC,GAAc,IACzBvB,EADwB,EAAXC,KACFC,OAAOC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,kBAAC,IAAD,CACEC,IAAKD,EAAKE,GACVC,MAAOH,EAAKI,YAAYD,MACxBE,IAAKL,EAAKM,OAAOC,KACjBI,KAAMX,EAAKM,OAAOK,KAClBH,KAAK,+DACLC,MAAOT,EAAKI,YAAYM,mBAG5B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKP,MAAM,YACX,kBAACS,EAAD,KAAWjB,M,kCCjCjB,sEAKMwB,EAAgBN,IAAOO,GAAV,+EAAGP,CAAH,6JAKH,YAA6B,IAA3BE,EAA0B,EAA1BA,MAAOJ,EAAmB,EAAnBA,KAAMU,EAAa,EAAbA,QAC3B,MAAa,SAATV,EACKU,EAEAN,EAAMO,eAKf,qBAAEP,MAAiBC,wBAKjBO,EAAQV,YAAOW,KAAV,uEAAGX,CAAH,uCAKLY,EAAQZ,IAAOa,GAAV,uEAAGb,CAAH,oMAMA,gBAAEF,EAAF,EAAEA,KAAF,EAAQU,QAAR,MAA8B,SAATV,EAAkB,OAAS,UAEvD,qBAAEI,MAAiBC,wBAQnB,qBAAED,MAAiBE,wBAKjBU,EAAcd,IAAOe,EAAV,6EAAGf,CAAH,8JAIN,gBAAEF,EAAF,EAAEA,KAAF,EAAQU,QAAR,MAA8B,SAATV,EAAkB,uBAAyB,UAEvE,qBAAEI,MAAiBC,wBASnB,qBAAED,MAAiBE,wBAKjBY,EAAgBhB,YAAOiB,QAAV,+EAAGjB,CAAH,kpBAKf,qBAAEE,MAAiBC,wBAkBnB,qBAAED,MAAiBE,wBAcjBc,EAAWlB,IAAOmB,IAAV,0EAAGnB,CAAH,kHAKH,gBAAEF,EAAF,EAAEA,KAAMsB,EAAR,EAAQA,UAAR,MAAgC,SAATtB,EAAkBsB,EAAY,UAE5D,qBAAElB,MAAiBC,wBAKjBkB,EAAQ,CACZC,QAAS,KACTC,KAAM,MAiBOC,IAdF,SAAC,GAAuC,IAArClC,EAAoC,EAApCA,MAAOK,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,MAAOJ,EAAgB,EAAhBA,IAAKM,EAAW,EAAXA,KACvC,OACE,kBAACQ,EAAD,CAAeR,KAAMA,EAAMU,QAASZ,EAAM6B,OAAOC,aAC/C,kBAACV,EAAD,CAAeW,GAAInC,GACjB,kBAACkB,EAAD,CAAOkB,MAAOhC,EAAMiC,gBAAgBD,QACpC,kBAAChB,EAAD,CAAOd,KAAMA,EAAMU,QAASZ,EAAM6B,OAAOC,aAAcpC,GACvD,kBAACwB,EAAD,CAAahB,KAAMA,EAAMU,QAASZ,EAAM6B,OAAOC,aAAc/B,GAC7D,kBAACuB,EAAD,CAAUpB,KAAMA,EAAMsB,UAAWxB,EAAM6B,OAAOK,SAC1CT,EAAMvB","file":"component---src-pages-works-js-99753a01def86fe2e588.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport { PostList } from \"./index\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Card from \"../components/post-card\"\n\nconst WorksPage = ({ data }) => {\n  const as1 = data.allMdx.edges.map(({ node }) => (\n    <Card\n      key={node.id}\n      title={node.frontmatter.title}\n      url={node.fields.slug}\n      desc=\"作为一名设计师，深入思考一个产品是必要的，只有理解产品的运作机制，才能够把握设计的方向和本质，设计出用户真正需要的功能。\"\n      image={node.frontmatter.featuredImage}\n      type={node.fields.type} \n    ></Card>\n  ));\n  return (\n    <Layout>\n      <SEO title=\"项目 Works\" />\n      <PostList>{as1}</PostList>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allMdx(filter: {fields: {type: {eq: \"work\"}}}) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            featuredImage {\n              colors {\n                lightMuted\n                darkVibrant\n                lightVibrant\n                vibrant\n              }\n              childImageSharp {\n                sizes(maxWidth: 960) {\n                  ...GatsbyImageSharpSizes\n                }\n              }\n            }\n          }\n          fields {\n            slug\n            type\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default WorksPage\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { graphql } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport Card from \"../components/post-card\";\n\nexport const PostList = styled.ul`\n  padding: 0 20px;\n  margin: 0 auto;\n  ${({ theme }) => theme.breakpointWidthSmall} {\n    max-width: 720px;\n  }\n  ${({ theme }) => theme.breakpointWidthLarge} {\n    max-width: 1000px;\n  }\n`;\n\nconst IndexPage = ({ data }) => {\n  const as1 = data.allMdx.edges.map(({ node }) => (\n    <Card\n      key={node.id}\n      title={node.frontmatter.title}\n      url={node.fields.slug}\n      type={node.fields.type}\n      desc=\"作为一名设计师，深入思考一个产品是必要的，只有理解产品的运作机制，才能够把握设计的方向和本质，设计出用户真正需要的功能。\"\n      image={node.frontmatter.featuredImage}\n    ></Card>\n  ));\n  return (\n    <Layout>\n      <SEO title=\"首页 Home\" />\n      <PostList>{as1}</PostList>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allMdx {\n      edges {\n        node {\n          id\n          fields {\n            slug\n            type\n          }\n          frontmatter {\n            title\n            featuredImage {\n              colors {\n                lightMuted\n                darkVibrant\n                lightVibrant\n                vibrant\n              }\n              childImageSharp {\n                sizes(maxWidth: 960) {\n                  ...GatsbyImageSharpSizes\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\nimport Img from \"gatsby-image\"\n\nconst CardContainer = styled.li`\n  list-style: none;\n  display: block;\n  padding: 0;\n  margin: 0 0 32px 0;\n  background: ${({theme, type, bgColor}) => {\n    if (type === 'work')\n      return bgColor\n    else\n      return theme.cardBgColor\n  }};\n  border-radius: 16px;\n  overflow: hidden;\n\n  ${({theme}) => theme.breakpointWidthSmall} {\n    margin: 0 0 100px 0;\n    border-radius: 24px;\n  }\n`\nconst Image = styled(Img)`\n  grid-column: image;\n  grid-row: image;\n  \n`\nconst Title = styled.h2`\n  font-size: 1.6rem;\n  padding: 0 20px;\n  margin-top: 24px;\n  margin-bottom: 1rem;\n\n  color: ${({type, bgColor}) => type === 'work' ? '#fff' : '#000'};\n\n  ${({theme}) => theme.breakpointWidthSmall} {\n    grid-row: title;\n    grid-column: caption;\n    padding: 0 48px;\n    margin-top: 0;\n    margin-bottom: 1.666rem;\n  }\n\n  ${({theme}) => theme.breakpointWidthLarge} {\n    font-size: 2.5rem;\n  }\n`\n\nconst Description = styled.p`\n  font-size: .85rem;\n  padding: 0 20px;\n\n  color: ${({type, bgColor}) => type === 'work' ? 'rgba(255,255,255,.7)' : '#000'};\n\n  ${({theme}) => theme.breakpointWidthSmall} {\n    grid-row: description;\n    grid-column: caption;\n    line-height: 1.5;\n\n    padding: 0 48px;\n    margin-top: 0;\n  }\n  \n  ${({theme}) => theme.breakpointWidthLarge} {\n    font-size: 1rem;\n  }\n`\n\nconst LinkContaienr = styled(Link)`\n  text-decoration: none;\n  display: block;\n  height: auto;\n\n  ${({theme}) => theme.breakpointWidthSmall} {\n    display: grid;\n    height: 390px;\n\n    grid-template-columns: \n      [caption-start] 1fr\n      [caption-end image-start] 1fr\n      [image-end];\n\n      grid-template-rows: \n      [margin-start image-start] 64px \n      [margin-end title-start] max-content\n      [title-end description-start] auto\n      [description-end tag-start] max-content\n      [tag-end margin-bottom-start] 32px\n      [margin-bottom-end image-end];\n  }\n\n  ${({theme}) => theme.breakpointWidthLarge} {\n    display: grid;\n    height: 550px;\n\n    grid-template-rows: \n      [margin-start image-start] 128px \n      [margin-end title-start] max-content\n      [title-end description-start] auto\n      [description-end tag-start] max-content\n      [tag-end margin-bottom-start] 48px\n      [margin-bottom-end image-end];\n  }\n`\n\nconst PostType = styled.div`\n  grid-row: tag;\n  grid-column: caption;\n  padding: 0 20px 24px 20px;\n  font-weight: bold;\n  color: ${({type, textColor}) => type === 'work' ? textColor : '#000'};\n\n  ${({theme}) => theme.breakpointWidthSmall} {\n    padding-left: 48px;\n  } \n`\n\nconst TYPES = {\n  article: '文章',\n  work: '项目'\n}\n\nconst Card = ({ title, desc, image, url, type }) => {\n  return (\n    <CardContainer type={type} bgColor={image.colors.darkVibrant}>\n      <LinkContaienr to={url}>\n        <Image sizes={image.childImageSharp.sizes} />\n        <Title type={type} bgColor={image.colors.darkVibrant}>{title}</Title>\n        <Description type={type} bgColor={image.colors.darkVibrant}>{desc}</Description>\n        <PostType type={type} textColor={image.colors.vibrant}>\n          { TYPES[type] }\n        </PostType>\n      </LinkContaienr>\n    </CardContainer>\n  )\n}\nexport default Card"],"sourceRoot":""}